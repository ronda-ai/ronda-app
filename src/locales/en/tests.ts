

export default {
      title: "Tests",
      tagline: "Review and manage tests generated from classroom activities.",
      createButton: "Create New Test",
      createdAt: "Created",
      basedOn: "Based on",
      testTitle: "Test",
      rubricTitle: "Rubric",
      startTest: "Start Test",
      previewButton: "Preview Test",
      generateRubric: "Generate Rubric",
      deleteTest: "Delete Test",
      noTests: {
          title: "No Tests Yet",
          description: "Tests you generate and save from the Playground will appear here."
      },
      toastCreateSuccess: "Test created successfully!",
      toastCreateFailed: "Failed to create test.",
      toastUpdateSuccess: "Test updated successfully!",
      toastUpdateFailed: "Failed to update test.",
      toastDeleted: "Test deleted successfully.",
      toastDeleteFailed: "Failed to delete test.",
       rubricGenerated: {
        title: "Rubric Generated!",
        description: "The new rubric has been saved. You can view or edit it by opening the test editor.",
      },
      deleteDialog: {
          title: "Delete this test?",
          description: "This action cannot be undone and will permanently delete the test.",
          confirm: "Delete",
      },
      editor: {
        backToTests: "Back to All Tests",
        addBlock: "Add Question Block",
        blockTypes: {
            'multiple-choice': 'Multiple Choice',
            'true-false': 'True/False',
            'open-ended': 'Open Question',
            'title': 'Section Title',
        },
        addQuestion: "Add Question",
        addOption: "Add Option",
        questionLabel: "Question {number}",
        answer: "Answer",
        testDetails: 'Test Details',
        rubric: 'Evaluation Rubric',
        testTitle: 'Test Title',
        points: 'Points',
        description: 'Description',
        noRubric: 'No rubric associated with this test.'
      },
      creationDialog: {
        title: "Create New Test",
        description: "Choose how you want to create your new test.",
        manualButton: "Create Manually",
        aiButton: "Generate with AI",
        topicLabel: "Test Topic",
        topicPlaceholder: "What is the main topic? e.g., The Water Cycle, linear equations...",
        customPromptLabel: "Additional Instructions (Optional)",
        customPromptPlaceholder: "e.g., Focus on conceptual understanding, base questions on a specific text...",
        generateButton: "Generate Test",
        toastError: "Failed to generate test.",
        manualTitle: "Manual Test",
        manualRubric: "Manually created rubric."
      },
      previewDialog: {
        title: 'Test Preview',
        basedOn: 'Based on',
        rubricTitle: 'Evaluation Rubric',
        close: 'Close',
      },
      liveSession: {
        title: "Test Session in Progress",
        description: "Share this QR code or link with your students to start the test.",
        qrCode: "QR Code",
        link: "Direct Link",
        copy: "Copy",
        copied: "Copied!",
        studentsConnected: "Students Connected",
        noStudentsYet: "No students have connected yet.",
        viewResults: "View Live Results",
        closeSession: "Close Session",
      },
      results: {
        title: "Test Results",
        description: "View the results of your students' submissions for the test: {testName}",
        student: "Student",
        status: "Status",
        score: "Score",
        completed: "Completed",
        noSubmissions: "No submissions have been received yet.",
        backButton: "Back to Tests",
        submissionDetails: "Submission Details",
        studentAnswer: "Student's Answer",
        correctAnswer: "Correct Answer",
        analyzeWithAI: "Analyze with AI",
        analysisDialog: {
            title: "Test Analysis for {name}",
            description: "The AI has analyzed the student's performance and generated the following insights.",
            strengths: "Areas of Strength",
            opportunities: "Areas for Opportunity",
            suggestion: "Pedagogical Suggestion",
        }
      }
} as const;
